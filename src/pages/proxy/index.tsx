/* eslint-disable @typescript-eslint/no-explicit-any */
'use client';

import { useState } from 'react';

import { PatternInfo } from '../../components/pattern-info';

const adminService = {
  openPanel() {
    return 'üîê –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ—Ç–∫—Ä—ã—Ç–∞!';
  },
};

const createSecureProxy = (service: typeof adminService, role: string) => {
  return new Proxy(service, {
    get(target, prop: keyof typeof service) {
      if (prop === 'openPanel') {
        return () => {
          if (role !== 'admin') {
            throw new Error('‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω! –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤.');
          }
          return target[prop]();
        };
      }
      return target[prop];
    },
  });
};

export default function ProxyAccessPage() {
  const [role, setRole] = useState<'guest' | 'admin'>('guest');
  const [message, setMessage] = useState<string | null>(null);

  const secureAdmin = createSecureProxy(adminService, role);

  const handleTryOpen = () => {
    try {
      const result = secureAdmin.openPanel();
      setMessage(result);
    } catch (err: any) {
      setMessage(err.message);
    }
  };

  return (
    <div className="p-8">
      <PatternInfo
        title="Proxy (–ö–æ–Ω—Ç—Ä–æ–ª—å –¥–æ—Å—Ç—É–ø–∞)"
        description="Proxy –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–∞ –∫ –æ–±—ä–µ–∫—Ç—É. –ù–∞–ø—Ä–∏–º–µ—Ä, –¥–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã–º —Ñ—É–Ω–∫—Ü–∏—è–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –º–æ–∂–Ω–æ —Ä–∞–∑—Ä–µ—à–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º."
        advantages={[
          '–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Äî –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ –≤–∞–∂–Ω—ã–º –æ–±—ä–µ–∫—Ç–∞–º',
          '–ß—ë—Ç–∫–æ–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–µ–π –∏ –ø—Ä–∞–≤',
          '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è',
        ]}
        disadvantages={['–£—Å–ª–æ–∂–Ω—è–µ—Ç –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É', '–¢—Ä–µ–±—É–µ—Ç –ø—Ä–æ–¥—É–º–∞–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–æ–ª—è–º–∏']}
        usage={[
          '–†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ–ª–µ–≤–æ–π –º–æ–¥–µ–ª–∏ –¥–æ—Å—Ç—É–ø–∞',
          '–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä',
          '–ö–æ–Ω—Ç—Ä–æ–ª—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è API –≤ –±–æ–ª—å—à–∏—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö',
        ]}
      />

      <div className="mt-12">
        <h2 className="text-xl font-bold mb-4">–ü—Ä–∏–º–µ—Ä: Proxy –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–∞–≤</h2>

        <p className="mb-4">
          –¢–µ–∫—É—â–∞—è —Ä–æ–ª—å: <strong>{role}</strong>
        </p>

        <div className="flex gap-4 mb-6">
          <button
            onClick={() => setRole('guest')}
            className="rounded bg-gray-600 px-4 py-2 text-white hover:bg-gray-700"
          >
            –í–æ–π—Ç–∏ –∫–∞–∫ –≥–æ—Å—Ç—å
          </button>
          <button
            onClick={() => setRole('admin')}
            className="rounded bg-green-600 px-4 py-2 text-white hover:bg-green-700"
          >
            –í–æ–π—Ç–∏ –∫–∞–∫ –∞–¥–º–∏–Ω
          </button>
        </div>

        <button
          onClick={handleTryOpen}
          className="rounded bg-blue-600 px-4 py-2 text-white hover:bg-blue-700"
        >
          –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å
        </button>

        {message && <p className="mt-6 text-lg font-semibold">{message}</p>}
      </div>
    </div>
  );
}
